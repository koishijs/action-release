name: Build

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          depth: 0

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install
        run: yarn

      - name: Build
        run: yarn build

      - id: version
        name: Get version
        run: version.sh

      - name: Move manifest
        run: |
          mv action.yml dist/action.yml
          mv version.sh dist/version.sh

      - id: deploy
        name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
          publish_branch: dist
          force_orphan: true
          enable_jekyll: true
          user_name: GitHub Actions
          user_email: actions@github.com
          tag_name: ${{ steps.version.outputs.new }}

      - name: Check out dist
        uses: actions/checkout@v3
        with:
          ref: dist
          depth: 0

      - name: Set user identity
        run: |
          git config user.email "GitHub Actions"
          git config user.name "actions@github.com"

      - name: Track minor
        if: ${{ steps.version.outputs.new }}
        run: |
          RAW=$(echo ${{ steps.version.outputs.tag }} | cut -d . -f 1,2)
          REG=^$(echo $RAW | sed 's/\./\\./g')$
          [ -z "$(git tag -l | grep -E $REG)" ] || git tag -d $RAW
          git tag -a $RAW -m "Tracking $RAW"
          git push origin --tags

      - name: Track major
        if: ${{ steps.version.outputs.new }}
        run: |
          RAW=$(echo ${{ steps.version.outputs.tag }} | cut -d . -f 1)
          REG=^$(echo $RAW | sed 's/\./\\./g')$
          [ -z "$(git tag -l | grep -E $REG)" ] || git tag -d $RAW
          git tag -a $RAW -m "Tracking $RAW"
          git push origin --tags
